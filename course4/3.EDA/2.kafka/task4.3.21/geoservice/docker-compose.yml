version: '3.8'

services:
  geo:
    build: 
      context: .
      dockerfile: Dockerfile
    restart: on-failure
    ports:
      - "8080:8080"
    depends_on:
      - db
      - cache
      - rabbit
    environment:
      BROKER: "kafka"
  kafka-consumer:
    build:
      context: ../KafkaNotification
      dockerfile: ./Dockerfile
    restart: on-failure
    depends_on:
      - geo
      - kafka
      - zookeeper
  zookeeper:
    hostname: zookeeper
    image: bitnami/zookeeper:latest
    restart: always
    expose:
      - "2181"
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
  kafka:
      hostname: kafka
      image: bitnami/kafka:latest
      restart: always
      env_file:
        - ./kafka-variables.env
      depends_on:
        - zookeeper
      expose:
        - "9092"
        - "8082"
        - "8083"
      ports:
        - '9092:9092'
        - '8082:8082'
        - '8083:8083'
  rabbit-consumer:
    build:
      context: ../RabbitNotification
      dockerfile: ./Dockerfile
    restart: on-failure
    depends_on:
      - rabbit
      - geo
  rabbit:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 4s
      timeout: 20s
      retries: 10
  db:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=geoservicedb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  cache:
    image: redis:latest
